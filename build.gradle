plugins {
    id 'java-library'
    id 'eclipse'
    id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'net.enderturret'
version = '1.2.1'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
java.withSourcesJar()

repositories {
    mavenCentral()
}

sourceSets {
    patcher {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    patcherTest {
        compileClasspath += sourceSets.patcher.output
        runtimeClasspath += sourceSets.patcher.output
    }
}

configurations {
    patcherImplementation.extendsFrom implementation
    patcherCompileOnly.extendsFrom compileOnly
    testCompileOnly.extendsFrom compileOnly
}

dependencies {
    api 'com.google.code.gson:gson:2.9.0'
    compileOnly 'org.jetbrains:annotations:24.0.1'
}

task patcherJar(type: Jar, dependsOn: compilePatcherJava) {
    archiveClassifier = 'patcher'
    from (sourceSets.patcher.output) {
        exclude 'net/enderturret/patched/Patched.class'
        exclude 'net/enderturret/patched/Patched$Settings.class'
    }
}

task patcherSourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'patcher-sources'
    from (sourceSets.patcher.allSource) {
        exclude 'net/enderturret/patched/Patched.java'
    }
}

shadowJar {
    archiveClassifier = 'cli'
    from sourceSets.patcher.output
}

artifacts {
    archives patcherJar, patcherSourcesJar, shadowJar
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Patched'
                description = 'Enables patching of Json files for mods or other uses.'
            }
            artifact patcherJar
            artifact patcherSourcesJar
        }
    }
}